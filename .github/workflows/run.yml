name: Go-Gator

on:
  push:
    branches:
      - main

jobs:
  launch:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install go-tools using go get
        run:
          go get -u honnef.co/go/tools

      - name: Explicit installment of staticcheck
        run:
          go install honnef.co/go/tools/cmd/staticcheck@2023.1.7

      - name: Install go-task with curl
        run:
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Format code using go fmt
        run: task fmt

      - name: Check for differences after fmt
        id: check-diff
        run: |
          fmt_output=$(go fmt ./...)

          if [[ -n "$fmt_output" ]]; then
              echo "Formatting changes detected in the following files:"
              echo "$fmt_output"
              echo "has-diff=true" >> $GITHUB_ENV
          else
              echo "No formatting changes detected"
              echo "has-diff=false" >> $GITHUB_ENV 
          fi

      - name: Check for differences after fmt
        if: steps.check-diff.outputs.has-diff
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Go fmt formatted files. Please, prepare files before pushing to the main branch. Exiting...')

      - name: Analyze code for bugs and errors
        run: task vet

      - name: Clean go.mod dependencies
        run: task clean

      - name: Run staticcheck on the project
        run: task stch

      - name: Test application
        run: task test

      - name: Build docker image
        run:
          docker build -t go-gator .