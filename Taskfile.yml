version: '3'

tasks:
  pre-launch:
    label: "Prepare code for launching"
    summary: |
      This task formats code, optimizes dependencies and runs staticcheck tool
    cmds:
      - gofmt
      - go mod tidy
      - staticcheck

  launch:
    label: "Build and launch the code"
    summary: |
      This task builds executable file and runs it.
    cmds:
      - go build -o ./bin/server.exe
      - ./bin/server.exe

  test:
    label: "Run all tests in application in MacOS/Linux"
    summary: |
      This task runs all available test files from all child folders
    cmd: |
      mkdir pkg_tests
      go test ./... -c -o pkg_tests
      
      ./pkg_tests/server.test
      ./pkg_tests/handlers.test
      ./pkg_tests/templates.test
      ./pkg_tests/parsers.test
      ./pkg_tests/filters.test
      ./pkg_tests/types.test
      ./pkg_tests/validator.test

  test-wind:
    label: "Run all tests in application on Windows machine"
    summary: |
      This task runs all available test files from all child folders
      [INFO]: Should be used on Windows
    cmd: |
      mkdir pkg_tests
      go test ./... -c -o pkg_tests
      
      ./pkg_tests/server.test.exe
      ./pkg_tests/handlers.test.exe
      ./pkg_tests/templates.test.exe
      ./pkg_tests/parsers.test.exe
      ./pkg_tests/filters.test.exe
      ./pkg_tests/types.test.exe
      ./pkg_tests/validator.test.exe
      

  testingDone:
    summary: |
      Run Go tests with coverage report and fail if coverage is below 80%
    cmds:
      - go test -coverprofile=coverage.out
      - |
        coverage=$(go tool cover -func=coverage.out | grep -E '^total:' | awk '{print $3}' | sed 's/%//')
        threshold=80.0
        if (( $(echo "$coverage < $threshold" | bc -l) )); then
          echo "Coverage $coverage% is below the threshold of $threshold%"
          exit 1
        else
          echo "Coverage $coverage% meets the threshold of $threshold%"
        fi

  dockerBuild:
    label: "Build the docker image using Dockerfile with go-gator as a name"
    cmd: docker build -t go-gator .

  publish:
    label: "Push the image to dockerhub"
    cmds:
      - docker login
      - docker push werniq/go-gator
