version: '3'

env:
  DOCKER_IMAGE_NAME: '{{ .DOCKER_IMAGE_NAME | default "go-gator" }}'
  DOCKER_USERNAME:   '{{ .DOCKER_USERNAME | default "qniw984" }}'
  DOCKER_IMAGE_TAG:  '{{ .DOCKER_IMAGE_TAG | default "latest" }}'
  DOCKERHUB_USERNAME: '{{ .DOCKER_LOGIN_USERNAME }}'
  DOCKERHUB_PASSWORD: '{{ .DOCKERHUB_PASSWORD }}'
  TESTDIR_NAME:      '{{ .TESTDIR_NAME | default "pkg_tests" }}'
  GO_GATOR_CHART_VERSION: '{{ .GO_GATOR_CHART_VERSION | default "0.1.0" }}'

tasks:
  fmt:
    desc: Format all code in all subdirectories
    cmds:
      - go fmt ./...

  vet:
    desc: Format all code in all subdirectories
    cmds:
      - go vet ./...

  clean:
    desc: Clean go mod dependencies
    cmds:
      - go mod tidy

  stch:
    desc: Run staticcheck
    cmds:
      - staticcheck ./...

  pre-launch:
    label: Prepare code before launching
    desc: Formats code, optimizes dependencies and runs staticcheck tool
    deps:
      - fmt
      - vet
      - clean
      - stch

  build:
    label: Build go-gator
    desc: Builds executable file for the server
    cmds:
      - go build

  run:
    label: Running go-gator
    desc: Run the application
    cmds:
      - go run .

  test:
    label: Run all tests in application
    desc: This task runs all available test files from all child folders
    cmd: |
      go test ./... -v

  docker-build:
    desc: Build the docker image using Dockerfile with go-gator as a name
    cmd: docker build -t {{ .DOCKER_IMAGE_NAME }} .

  docker-run:
    desc: Run docker image
    cmd: docker run {{ .DOCKER_IMAGE_NAME }}

  publish:
    label: Pushing image to dockerhub
    desc: Push docker image to dockerhub
    deps:
      - docker-build
    cmds:
      - docker login -u {{ .DOCKERHUB_USERNAME }} -p {{ .DOCKERHUB_PASSWORD }}
      - docker push {{ .DOCKER_USERNAME }}/{{ .DOCKER_IMAGE_NAME }}:{{ .DOCKER_IMAGE_TAG }}

  deploy:
    desc: Deploy news aggregator app on the Kubernetes cluster
    cmds:
      - kubectl apply -f templates/

  undeploy:
    desc: Remove news aggregator from kubernetes Cluster
    cmds:
      - kubectl delete -f templates/

  installChart:
    desc: Install the Helm chart on the Kubernetes cluster
    cmds:
      - helm install go-gator-{{ .GO_GATOR_CHART_VERSION }}.tgz go-gator

  uninstallChart:
    desc: Uninstall the Helm chart from the Kubernetes cluster
    cmds:
      - helm uninstall go-gator

  aws-login:
    desc: Login to AWS CLI
    cmds:
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 406477933661.dkr.ecr.us-east-2.amazonaws.com

  img-ecr-build:
    desc: Build image for ECR
    cmds:
      - docker build -t qniw984/go-gator .
      - docker tag qniw984/go-gator 406477933661.dkr.ecr.us-east-2.amazonaws.com/qniw984/go-gator

  img-ecr-push:
    desc: Push image to ECR
    deps:
      - img-ecr-build
    cmds:
      - docker push 406477933661.dkr.ecr.us-east-2.amazonaws.com/qniw984/go-gator

  chart-ecr-build:
    desc: Build Helm chart for ECR
    cmds:
      - helm package go-gator

  chart-ecr-push:
    desc: Push image to ECR
    deps:
      - ecr-build
    cmds:
      - helm push go-gator-0.1.0.tgz oci://406477933661.dkr.ecr.us-east-2.amazonaws.com/qniw984/

  day-0-ecr-build:
    desc: Build Helm chart for ECR
    cmds:
      - helm package day-0

  day-0-ecr-push:
    desc: Push image to ECR
    deps:
      - ecr-build
    cmds:
      - helm push day-0-{{ .DAY_0_VERSION }}.tgz oci://406477933661.dkr.ecr.us-east-2.amazonaws.com/qniw984/
      - kubectl delete namespace go-gator
