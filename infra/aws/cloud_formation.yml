Parameters:
  VpcName:
    Type: string
    Description: The name of the VPC.
    Default: GoGatorVpc

  CidrBlock:
    Type: string
    Description: The CIDR block for the VPC. This should be a valid private (RFC 1918) CIDR block.
    Default: 10.0.1.0/24

  NodeGroupInstanceType:
    Type: string
    Description: The EC2 instance type for the node group.
    Default: t3.medium
    AllowedValues:
      - t3.medium
      - t2.medium
      - t2.small

  MinimalNodeGroupSize:
    Type: number
    Description: The minimal number of nodes in the node group.
    Default: 1
    MinValue: 1
    MaxValue: 5

  MaximalNodeGroupSize:
    Type: number
    Description: The maximal number of nodes in the node group.
    Default: 5
    MinValue: 1
    MaxValue: 10

  NodeGroupDesiredCapacity:
    Type: number
    Description: The desired number of nodes in the node group.
    Default: 1
    MinValue: !Ref MinimalNodeGroupSize
    MaxValue: !Ref MaximalNodeGroupSize

  KubernetesVersion:
    Type: string
    Description: The Kubernetes version for the cluster.
    Default: "1.30"
    MinValue: "1.24"
    MaxValue: "1.30"

Resources:
  GoGatorVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: !Ref VpcName

  GoGatorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Go-Gator
      GroupName: Go-Gator-Security-Group
      VpcId: !Ref GoGatorVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  GoGatorSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GoGatorVpc
      CidrBlock: 10.0.1.0/26
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: GoGatorSubnet1

  GoGatorSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GoGatorVpc
      CidrBlock: 10.0.1.64/26
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: GoGatorSubnet2

  GoGatorInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Go-Gator-Internet-Gateway

  GoGatorAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref GoGatorVpc
      InternetGatewayId: !Ref GoGatorInternetGateway

  GoGatorRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref GoGatorVpc
      Tags:
        - Key: Name
          Value: Go-Gator-Route-Table

  GoGatorRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GoGatorRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref GoGatorInternetGateway

  GoGatorSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GoGatorSubnet1
      RouteTableId: !Ref GoGatorRouteTable

  GoGatorSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GoGatorSubnet2
      RouteTableId: !Ref GoGatorRouteTable

  GoGatorCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: GoGatorCluster
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref GoGatorSubnet1
          - !Ref GoGatorSubnet2
      RoleArn: arn:aws:iam::406477933661:role/Oleksandr
      Version: !Ref KubernetesVErsion
      UpgradePolicy:
        SupportType: EXTENDED

  CoreDNSAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: coredns
      ClusterName: !Ref GoGatorCluster
      ResolveConflicts: OVERWRITE
      AddonVersion: v1.11.1-eksbuild.8

  KubeProxyAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: kube-proxy
      ClusterName: !Ref GoGatorCluster
      ResolveConflicts: OVERWRITE
      AddonVersion: v1.30.0-eksbuild.3

  AmazonVPCCniAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: vpc-cni
      ClusterName: !Ref GoGatorCluster
      ResolveConflicts: OVERWRITE
      AddonVersion: v1.18.1-eksbuild.3

  PodIdentityAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: eks-pod-identity-agent
      ClusterName: !Ref GoGatorCluster
      ResolveConflicts: OVERWRITE
      AddonVersion: v1.3.2-eksbuild.2

  GoGatorNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref GoGatorCluster
      NodegroupName: Go-Gator-Node-Group
      NodeRole: arn:aws:iam::406477933661:role/oleksandr-node-group
      Subnets:
        - !Ref GoGatorSubnet1
        - !Ref GoGatorSubnet2
      ScalingConfig:
        DesiredSize: !Ref NodeGroupDesiredCapacity
        MinSize: !Ref MinimalNodeGroupSize
        MaxSize: !Ref MaximalNodeGroupSize
      InstanceTypes:
        - !Ref NodeGroupInstanceType